name: CI/CD Pipeline

on:
  push:
    branches:
      - main

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      checks: write  # Permitir la creaci√≥n de checks de GitHub

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies
        run: mvn install -DskipTests

      - name: Run Tests with Testcontainers and Generate Coverage Report
        env:
          TESTCONTAINERS_RYUK_DISABLED: "true" # Opcional: deshabilita Ryuk si es necesario
          DOCKER_HOST: tcp://localhost:2375
        run: mvn test jacoco:report

      - name: Upload Test and Coverage Results
        if: always()  # Este paso se ejecuta incluso si las pruebas fallan
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            target/surefire-reports
            target/site/jacoco/jacoco.xml

      - name: Display Test Results
        uses: dorny/test-reporter@v1
        with:
          name: Test Results
          path: target/surefire-reports/*.xml
          reporter: java-junit

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t alvarosalazar/cliente-service:latest .
          docker push alvarosalazar/cliente-service:latest

